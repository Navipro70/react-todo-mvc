{"version":3,"sources":["pages/TodosPage/components/TodoItem/TodoItem.module.css","pages/TodosPage/TodosPage.module.css","pages/TodosPage/components/Menu/Menu.module.css","pages/TodosPage/components/TodoInput/TodoInput.module.css","constants/constants.ts","constants/storageKeys.ts","store/useTodosState.ts","store/useStore.tsx","pages/TodosPage/components/TodoInput/TodoInput.tsx","assets/icons/index.ts","assets/icons/Close.tsx","pages/TodosPage/components/TodoItem/TodoItem.tsx","pages/TodosPage/components/Menu/Menu.tsx","pages/TodosPage/TodosPage.tsx","App.tsx","index.tsx"],"names":["module","exports","TodosFilter","StorageKeys","storedTodods","localStorage","getItem","todos","todosFilter","StoreContext","createContext","todosStore","todosByFilter","filter","All","uncompletedCount","hasTodos","hasCompleted","onAddTodo","onCompleteTodo","onDeleteTodo","onUpdateTodo","onClearCompletedTodos","onSwitchCompleteAllTodos","onSwitchTodosFilter","StoreProvider","children","useState","JSON","parse","setTodos","setFilter","isCompleted","length","useCallback","newFilter","applyNewTodos","newTodos","setItem","stringify","id","item","title","Date","now","map","Active","Completed","getTodosByFilter","useTodosState","Provider","value","TodoInput","inputRef","useRef","text","setText","className","styles","container","type","switcher","onChange","checked","ref","onKeyDown","event","key","current","blur","target","input","placeholder","Icons","props","width","height","fill","color","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","TodoItem","node","newTitle","setNewTitle","isHover","setIsHover","onMouseEnter","onEndEditing","e","contains","useEffect","window","addEventListener","removeEventListener","onMouseOver","onMouseLeave","onDoubleClick","checkbox","completedText","deleteIcon","onClick","Menu","onClearAll","filterContainer","Object","entries","label","filterBtn","selectedFilter","btn","TodosPage","store","useContext","Error","useStore","todosWrapper","toString","footer","link","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a8cf8bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoItem_container__381WX\",\"input\":\"TodoItem_input__8HGsu\",\"text\":\"TodoItem_text__1Oxe_\",\"completedText\":\"TodoItem_completedText__2zmAz\",\"checkbox\":\"TodoItem_checkbox__3BE09\",\"deleteIcon\":\"TodoItem_deleteIcon__GezsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodosPage_container__1fqYD\",\"title\":\"TodosPage_title__3z9n_\",\"todosWrapper\":\"TodosPage_todosWrapper__13AL_\",\"footer\":\"TodosPage_footer__1rvJN\",\"link\":\"TodosPage_link__IuGZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Menu_container__3YCsu\",\"filterContainer\":\"Menu_filterContainer__VhQ6Z\",\"filterBtn\":\"Menu_filterBtn__ZOoO5\",\"selectedFilter\":\"Menu_selectedFilter__28FdL\",\"btn\":\"Menu_btn__3O2G3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoInput_container__16Oyb\",\"switcher\":\"TodoInput_switcher__2EY-R\",\"input\":\"TodoInput_input__Pgfkw\"};","export enum TodosFilter {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","export enum StorageKeys {\n  todos = 'todos_key',\n  todosFilter = 'todos_filter_key',\n}\n","import { useCallback, useState } from 'react'\n\nimport { StorageKeys, TodosFilter } from 'src/constants'\n\nexport interface ITodo {\n  id: number\n  title: string\n  isCompleted: boolean\n}\n\nconst storedTodods = localStorage.getItem(StorageKeys.todos)\nconst todosFilter = localStorage.getItem(StorageKeys.todosFilter)\n\nexport const useTodosState = () => {\n  const [todos, setTodos] = useState<ITodo[]>(storedTodods ? JSON.parse(storedTodods) : [])\n  const [filter, setFilter] = useState(todosFilter ? JSON.parse(todosFilter) : TodosFilter.All)\n\n  const hasCompleted = !!todos.filter(({ isCompleted }) => isCompleted).length\n  const hasTodos = !!todos.length\n  const uncompletedCount = todos.filter(({ isCompleted }) => !isCompleted).length\n\n  const getTodosByFilter = () => {\n    switch (filter) {\n      case TodosFilter.All:\n        return todos\n      case TodosFilter.Active:\n        return todos.filter(({ isCompleted }) => isCompleted)\n      case TodosFilter.Completed:\n        return todos.filter(({ isCompleted }) => !isCompleted)\n      default:\n        return todos\n    }\n  }\n\n  const onSwitchTodosFilter = useCallback((newFilter: TodosFilter) => {\n    setFilter(newFilter)\n  }, [])\n\n  const applyNewTodos = useCallback((newTodos: ITodo[]) => {\n    setTodos(newTodos)\n    localStorage.setItem(StorageKeys.todos, JSON.stringify(newTodos))\n  }, [])\n\n  const onDeleteTodo = useCallback(\n    (id: number) => {\n      applyNewTodos(todos.filter((item) => item.id !== id))\n    },\n    [applyNewTodos, todos],\n  )\n\n  const onAddTodo = useCallback(\n    (title: string) => {\n      applyNewTodos([...todos, { id: Date.now(), title, isCompleted: false }])\n    },\n    [applyNewTodos, todos],\n  )\n\n  const onCompleteTodo = useCallback(\n    (id: number) => {\n      const newTodos = todos.map((item) =>\n        item.id === id\n          ? {\n              ...item,\n              isCompleted: !item.isCompleted,\n            }\n          : item,\n      )\n      applyNewTodos(newTodos)\n    },\n    [applyNewTodos, todos],\n  )\n\n  const onUpdateTodo = useCallback(\n    (id: number, title: string) => {\n      const newTodos = todos.map((item) =>\n        item.id === id\n          ? {\n              ...item,\n              title,\n            }\n          : item,\n      )\n      applyNewTodos(newTodos)\n    },\n    [applyNewTodos, todos],\n  )\n\n  const onSwitchCompleteAllTodos = useCallback(() => {\n    const newTodos = todos.map((item) => ({\n      ...item,\n      isCompleted: !hasCompleted,\n    }))\n    applyNewTodos(newTodos)\n  }, [applyNewTodos, hasCompleted, todos])\n\n  const onClearCompletedTodos = useCallback(() => {\n    applyNewTodos(todos.filter(({ isCompleted }) => !isCompleted))\n  }, [applyNewTodos, todos])\n\n  return {\n    todos,\n    todosByFilter: getTodosByFilter(),\n    filter,\n    uncompletedCount,\n    hasTodos,\n    hasCompleted,\n    onAddTodo,\n    onDeleteTodo,\n    onCompleteTodo,\n    onUpdateTodo,\n    onSwitchCompleteAllTodos,\n    onClearCompletedTodos,\n    onSwitchTodosFilter,\n  }\n}\n","import React, { createContext, useContext, FC } from 'react'\n\nimport { TodosFilter } from 'src/constants'\n\nimport { useTodosState } from './useTodosState'\n\ninterface IStore {\n  todosStore: ReturnType<typeof useTodosState>\n}\n\nconst StoreContext = createContext<IStore>({\n  todosStore: {\n    todos: [],\n    todosByFilter: [],\n    filter: TodosFilter.All,\n    uncompletedCount: 0,\n    hasTodos: false,\n    hasCompleted: false,\n    onAddTodo: () => {},\n    onCompleteTodo: () => {},\n    onDeleteTodo: () => {},\n    onUpdateTodo: () => {},\n    onClearCompletedTodos: () => {},\n    onSwitchCompleteAllTodos: () => {},\n    onSwitchTodosFilter: () => {},\n  },\n})\n\nexport const StoreProvider: FC = ({ children }) => {\n  const todosStore = useTodosState()\n\n  return <StoreContext.Provider value={{ todosStore } as IStore}>{children}</StoreContext.Provider>\n}\n\nexport const useStore = () => {\n  const store = useContext(StoreContext)\n\n  if (!store) throw Error(\"useStore hook can't be called outside StoreProvider\")\n\n  return store\n}\n","import React, { useState, useRef, KeyboardEventHandler, ChangeEventHandler } from 'react'\n\nimport styles from './TodoInput.module.css'\n\ninterface Props {\n  hasTodos: boolean\n  hasCompleted: boolean\n  onAddTodo: (title: string) => void\n  onSwitchCompleteAllTodos: () => void\n}\n\nexport const TodoInput = ({\n  hasTodos,\n  hasCompleted,\n  onAddTodo,\n  onSwitchCompleteAllTodos,\n}: Props) => {\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [text, setText] = useState('')\n\n  const onKeyDown: KeyboardEventHandler<HTMLInputElement> = (event) => {\n    if (event.key === 'Enter' && !!text) {\n      setText('')\n      onAddTodo(text)\n      inputRef.current?.blur()\n    }\n  }\n\n  const onChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    setText(event.target.value)\n  }\n\n  return (\n    <div className={styles.container}>\n      {hasTodos && (\n        <input\n          type=\"checkbox\"\n          value=\"indigo\"\n          className={styles.switcher}\n          onChange={onSwitchCompleteAllTodos}\n          checked={hasCompleted}\n        />\n      )}\n      <input\n        ref={inputRef}\n        value={text}\n        onKeyDown={onKeyDown}\n        onChange={onChange}\n        className={styles.input}\n        placeholder=\"What's need to be done?\"\n      />\n    </div>\n  )\n}\n","import { Close } from './Close'\n\nexport const Icons = {\n  Close,\n}\n","import * as React from 'react'\n\nexport const Close = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg width={24} height={24} fill=\"none\" color={'#1f1f1f'} {...props}>\n    <path\n      d=\"M18 6L6 18M6 6l12 12L6 6z\"\n      stroke=\"currentColor\"\n      strokeWidth={1.25}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n","import React, { ChangeEventHandler, useCallback, useEffect, useRef, useState } from 'react'\n\nimport { Icons } from 'src/assets'\nimport { ITodo } from 'src/store/useTodosState'\n\nimport styles from './TodoItem.module.css'\n\ninterface Props extends ITodo {\n  onDeleteTodo: (id: number) => void\n  onCompleteTodo: (id: number) => void\n  onUpdateTodo: (id: number, title: string) => void\n}\n\nexport const TodoItem = ({\n  id,\n  title,\n  isCompleted,\n  onDeleteTodo,\n  onCompleteTodo,\n  onUpdateTodo,\n}: Props) => {\n  const node = useRef<HTMLInputElement>(null)\n  const [newTitle, setNewTitle] = useState('')\n  const [isHover, setIsHover] = useState(false)\n\n  const onDelete = () => onDeleteTodo(id)\n  const onComplete = () => onCompleteTodo(id)\n  const onMouseEnter = () => setIsHover(true)\n  const onMouseLeave = () => setIsHover(false)\n\n  const onStartEditing = () => {\n    setNewTitle(title)\n  }\n\n  const onEndEditing = useCallback(\n    (e) => {\n      if (node.current?.contains(e.target)) {\n        return\n      }\n      if (!!newTitle) {\n        onUpdateTodo(id, newTitle)\n      }\n      setNewTitle('')\n    },\n    [id, newTitle, onUpdateTodo],\n  )\n\n  const onNewTitleChange: ChangeEventHandler<HTMLInputElement> = (event) =>\n    setNewTitle(event.target.value)\n\n  useEffect(() => {\n    window.addEventListener('mousedown', onEndEditing)\n    return () => window.removeEventListener('mousedown', onEndEditing)\n  }, [onEndEditing])\n\n  return (\n    <div\n      className={styles.container}\n      onMouseOver={onMouseEnter}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onDoubleClick={onStartEditing}\n    >\n      <input\n        type=\"checkbox\"\n        value=\"indigo\"\n        className={styles.checkbox}\n        onChange={onComplete}\n        checked={isCompleted}\n      />\n\n      {newTitle ? (\n        <input ref={node} className={styles.input} value={newTitle} onChange={onNewTitleChange} />\n      ) : (\n        <span className={`${styles.text} ${isCompleted ? styles.completedText : ''}`}>{title}</span>\n      )}\n\n      {isHover && (\n        <button className={styles.deleteIcon} onClick={onDelete}>\n          <Icons.Close />\n        </button>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport { TodosFilter } from 'src/constants'\n\nimport styles from './Menu.module.css'\n\ninterface Props {\n  filter: TodosFilter\n  uncompletedCount: number\n  hasCompleted: boolean\n  onClearAll: () => void\n  onSwitchTodosFilter: (filter: TodosFilter) => void\n}\n\nexport const Menu = ({\n  filter,\n  uncompletedCount,\n  hasCompleted,\n  onClearAll,\n  onSwitchTodosFilter,\n}: Props) => (\n  <div className={styles.container}>\n    <span>{`${uncompletedCount} ${uncompletedCount === 1 ? 'item' : \"item's\"} left`}</span>\n\n    <div className={styles.filterContainer}>\n      {Object.entries(TodosFilter).map(([label, value]) => (\n        <button\n          className={`${styles.filterBtn} ${filter === value ? styles.selectedFilter : ''}`}\n          onClick={() => onSwitchTodosFilter(value)}\n        >\n          {label}\n        </button>\n      ))}\n    </div>\n\n    <button className={styles.btn} onClick={onClearAll}>\n      {hasCompleted ? 'Clear completed' : ''}\n    </button>\n  </div>\n)\n","import React from 'react'\n\nimport { useStore } from 'src/store'\n\nimport styles from './TodosPage.module.css'\nimport { Menu, TodoInput, TodoItem } from './components'\n\nexport const TodosPage = () => {\n  const {\n    todosStore: {\n      todos,\n      todosByFilter,\n      filter,\n      uncompletedCount,\n      hasTodos,\n      hasCompleted,\n      onAddTodo,\n      onSwitchCompleteAllTodos,\n      onDeleteTodo,\n      onCompleteTodo,\n      onUpdateTodo,\n      onClearCompletedTodos,\n      onSwitchTodosFilter,\n    },\n  } = useStore()\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.title}>Todos</h1>\n      <div className={styles.todosWrapper}>\n        <TodoInput\n          hasTodos={!!todos.length}\n          hasCompleted={hasCompleted}\n          onAddTodo={onAddTodo}\n          onSwitchCompleteAllTodos={onSwitchCompleteAllTodos}\n        />\n\n        {todosByFilter.map((item) => (\n          <TodoItem\n            {...item}\n            key={item.id.toString()}\n            onDeleteTodo={onDeleteTodo}\n            onCompleteTodo={onCompleteTodo}\n            onUpdateTodo={onUpdateTodo}\n          />\n        ))}\n\n        {hasTodos && (\n          <Menu\n            filter={filter}\n            uncompletedCount={uncompletedCount}\n            hasCompleted={hasCompleted}\n            onClearAll={onClearCompletedTodos}\n            onSwitchTodosFilter={onSwitchTodosFilter}\n          />\n        )}\n      </div>\n\n      <div className={styles.footer}>\n        Reference of{' '}\n        <a className={styles.link} href=\"https://todomvc.com/\">\n          TodoMVC\n        </a>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { StoreProvider } from './store'\n\nimport { TodosPage } from './pages'\n\nexport const App = () => (\n  <StoreProvider>\n    <TodosPage />\n  </StoreProvider>\n)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'reset-css'\n\nimport './index.css'\n\nimport { App } from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}